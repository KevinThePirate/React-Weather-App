{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","weatherForStyle","str","useState","query","setQuery","test","weather","setWeather","classList","setClassList","imgSrc","setImgSrc","search","evt","a","fetch","then","res","json","result","console","log","cod","description","weatherStyle","catch","error","bigFunc","param","includes","desc","className","id","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","onClick","main","src","name","sys","country","Math","round","temp","replace","txt","charAt","toUpperCase","substr","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36180c84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nfunction App() {\n  const test = \"echma\";\n  let weatherForStyle;\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({ test: 1 });\n  const [classList, setClassList] = useState(\"App other-weather\");\n  const [imgSrc, setImgSrc] = useState(\"other\");\n  const search = async (evt) => {\n    const apiKey = \"c6b3f1e08fefcd739701ca5124ccfa52\";\n    await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${apiKey}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        setQuery(\"\");\n        console.log({ result });\n        console.log({ weather });\n        console.log({ evt });\n        if (result.cod === \"404\") {\n          console.log(\"break\");\n        } else {\n          weatherForStyle = result.weather[0].description;\n          console.log({ weatherForStyle }, 1);\n          weatherStyle(result);\n        }\n      })\n      .catch((error) => console.log({ error }));\n  };\n  const bigFunc = async () => {\n    await search();\n    //weatherStyle(weather);\n  };\n  function toTitleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n  const weatherStyle = async (param) => {\n    let string = \"Hello, World\";\n    let substring = \"Hello\";\n    if (string.includes(substring)) {\n      console.log(\"container\");\n      console.log({ weatherForStyle }, 2);\n    }\n    console.log(typeof weatherForStyle);\n\n    let test = \"clouds\";\n    if (weatherForStyle.includes(test)) {\n      console.log(\"Clouds\");\n    } else {\n      console.log(\"No Clouds\");\n    }\n\n    let desc = weatherForStyle;\n    //console.log({ weather });\n    //console.log({ param });\n    /*if (typeof weather.main === \"undefined\") {\n      setClassList(\"App other-weather\");\n      console.log(weather.main);\n      console.log(\"undeff\");\n    } else {\n      console.log(\"deffed\");\n      console.log({ test });\n      //desc = weather.weather[0].description;\n    }\n    console.log({ desc });*/\n\n    if (desc.includes(\"sun\") || desc.includes(\"clear\")) {\n      setClassList(\"App sunny\");\n      setImgSrc(\"sun\");\n    } else if (desc.includes(\"rain\") || desc.includes(\"drizzle\")) {\n      setClassList(\"App rain\");\n      setImgSrc(\"rain\");\n    } else if (desc.includes(\"clouds\")) {\n      setClassList(\"App cloudy\");\n      console.log(\"bing\");\n      setImgSrc(\"cloud\");\n    } else {\n      setClassList(\"App other-weather\");\n      setImgSrc(\"other\");\n    }\n    if (desc.includes(\"snow\")) {\n      setImgSrc(\"snow\");\n    } else if (desc.includes(\"wind\")) {\n      setImgSrc(\"wind\");\n    }\n    console.log({ classList });\n  };\n  return (\n    <div className={classList} id=\"app\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n        id=\"search-area\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={(e) => setQuery(e.target.value)}\n          value={query}\n        />{\" \"}\n        <input type=\"submit\" value=\"Submit\" onClick={bigFunc} />\n      </form>\n      {typeof weather.main != \"undefined\" ? (\n        <div id=\"weather-area\">\n          <div id=\"image-area\">\n            <img src={`images/${imgSrc}.png`} />\n          </div>\n          <div id=\"info-area\">\n            <div id=\"wrapper\">\n              <div id=\"row-first\">\n                <h1>\n                  {weather.name}, {weather.sys.country}\n                </h1>\n              </div>\n              <div className=\"break\"></div>\n              <div id=\"row-second\">\n                <h2>{Math.round(weather.main.temp)}Â°C</h2>\n              </div>\n              <div className=\"break\"></div>\n              <div id=\"row-third\">\n                <p>{toTitleCase(weather.weather[0].description)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \" \"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}